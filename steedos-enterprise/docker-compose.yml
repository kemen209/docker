version: "3.9"

services:

  # Steedos Platform  
  steedos:
    image: steedos/steedos-enterprise:2.2
    command: "yarn start"
    ports:
      - "3000:3000"
    volumes:
      - "steedos-packages:/app/.steedos"
    environment:
      - ROOT_URL=${STEEDOS_ROOT_URL} # 此处修改为实际IP或域名，以及traefik的端口
      - PORT=3000 # 在此填入服务运行的端口
      - MONGO_URL=mongodb://${MONGODB_USERNAME}:${MONGODB_PASSWORD}@mongodb-primary,mongodb-secondary/steedos?authSource=admin&replicaSet=replicaset&readPreference=primary&ssl=false
      - MONGO_OPLOG_URL=mongodb://${MONGODB_USERNAME}:${MONGODB_PASSWORD}@mongodb-primary:27017/local?authSource=admin&replicaSet=replicaset&readPreference=primary&ssl=false
      - STEEDOS_PUBLIC_PAGE_ASSETURLS=https://unpkg.com/@steedos-ui/builder-widgets@2.2.20/dist/assets.json
      - STEEDOS_UNPKG_URL=https://npm.elemecdn.com  # 国内请使用此CDN，海外去掉使用 https://unpkg.com
      - STEEDOS_TENANT_ENABLE_ACTIVATION=true
      - STEEDOS_TENANT_ENABLE_PASSWORD_LOGIN=true
      - STEEDOS_CFS_STORE=S3
      - STEEDOS_CFS_AWS_S3_ENDPOINT=http://minio:9000
      - STEEDOS_CFS_AWS_S3_FORCE_PATH_STYLE=true
      - STEEDOS_CFS_AWS_S3_BUCKET=steedos-prod
      - STEEDOS_CFS_AWS_S3_ACCESS_KEY_ID=${MINIO_ACCESS_KEY}  # 此处必须修改为 minio 中的 MINIO_ROOT_USER
      - STEEDOS_CFS_AWS_S3_SECRET_ACCESS_KEY=${MINIO_SECRET_KEY} # 此处必须修改为 minio 中的 MINIO_ROOT_PASSWORD
      - TRANSPORTER=nats://nats:4222
      - CACHER=redis://:${REDIS_PASSWORD}@redis:6379
      - INSTANCES=1 # Nodejs Cluster 集群进程数
    depends_on:
      - redis
      - mongodb-primary
      - nats
    
  # Cache Service  
  redis:
    image: redis:6.2
    command: "redis-server --requirepass ${REDIS_PASSWORD}  --save \"\" --appendonly no --loglevel warning"
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    ports:
      - "6379:6379"
 
  # Micro Service Transporter
  nats:
    image: steedos/nats
    environment:
      - MAX_PAYLOAD=4096000 #4MB
    ports:
      - "4222:4222"
      - "8222:8222" # monitor port

  # S3 Storage Service
  minio:
    image: minio/minio
    environment:
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
    volumes:
      - steedos-minio-data:/data
    ports:
      - "9000:9000"
      - "9001:9001" 

  # Database Service Cluster
  mongodb-primary:
    image: 'bitnami/mongodb:4.4'
    ports:
      - 27017:27017
    environment:
      - MONGODB_ADVERTISED_HOSTNAME=mongodb-primary
      - MONGODB_REPLICA_SET_MODE=primary
      - MONGODB_ROOT_PASSWORD=${MONGODB_PASSWORD}
      - MONGODB_REPLICA_SET_KEY=replicasetkey123
    volumes:
      - 'steedos-mongo-primary-data:/bitnami'

  mongodb-secondary:
    image: 'bitnami/mongodb:4.4'
    depends_on:
      - mongodb-primary
    environment:
      - MONGODB_ADVERTISED_HOSTNAME=mongodb-secondary
      - MONGODB_REPLICA_SET_MODE=secondary
      - MONGODB_INITIAL_PRIMARY_HOST=mongodb-primary
      - MONGODB_INITIAL_PRIMARY_PORT_NUMBER=27017
      - MONGODB_INITIAL_PRIMARY_ROOT_PASSWORD=${MONGODB_PASSWORD}
      - MONGODB_REPLICA_SET_KEY=replicasetkey123

  mongodb-arbiter:
    image: 'bitnami/mongodb:4.4'
    depends_on:
      - mongodb-primary
    environment:
      - MONGODB_ADVERTISED_HOSTNAME=mongodb-arbiter
      - MONGODB_REPLICA_SET_MODE=arbiter
      - MONGODB_INITIAL_PRIMARY_HOST=mongodb-primary
      - MONGODB_INITIAL_PRIMARY_PORT_NUMBER=27017
      - MONGODB_INITIAL_PRIMARY_ROOT_PASSWORD=${MONGODB_PASSWORD}
      - ALLOW_EMPTY_PASSWORD=yes
      - MONGODB_REPLICA_SET_KEY=replicasetkey123

  # 每日备份数据库到S3
  # mongodb-backup-cron:
  #   image: appleboy/docker-backup-database:mongo-4.4
  #   depends_on:
  #     - mongodb-primary
  #     - minio
  #   logging:
  #     options:
  #       max-size: "100k"
  #       max-file: "3"
  #   environment:
  #     STORAGE_DRIVER: s3
  #     STORAGE_ENDPOINT: minio:9000
  #     STORAGE_BUCKET: mongo-backup
  #     STORAGE_PATH: prod
  #     STORAGE_SSL: "false"
  #     STORAGE_INSECURE_SKIP_VERIFY: "false"
  #     ACCESS_KEY_ID: ${MINIO_ACCESS_KEY}
  #     SECRET_ACCESS_KEY: ${MINIO_SECRET_KEY}

  #     DATABASE_DRIVER: mongo
  #     DATABASE_HOST: mongodb-primary:27017
  #     DATABASE_USERNAME: ${MONGODB_USERNAME}
  #     DATABASE_PASSWORD: ${MONGODB_PASSWORD}
  #     DATABASE_NAME: steedos
  #     DATABASE_OPTS: --authenticationDatabase=admin

  #     TIME_SCHEDULE: "0 0 * * *"
  #     TIME_LOCATION: Asia/Taipei

  # Low-code programming for event-driven applications    
  nodered:
    image: steedos/node-red:latest
    environment:
      - TZ=Asia/Beijing
      - PORT=1880
      - NODE_RED_USERNAME=${NODE_RED_USERNAME}
      - NODE_RED_PASSWORD=${NODE_RED_PASSWORD}
      - NODE_RED_THEME_TITLE=Steedos Node-RED
      - NODE_RED_STORAGE=mongodb
      - NODE_RED_MONGO_URL=mongodb://${MONGODB_USERNAME}:${MONGODB_PASSWORD}@mongodb-primary,mongodb-secondary/steedos?authSource=admin&replicaSet=replicaset&readPreference=primary&ssl=false
      # - NODE_RED_STORAGE=s3
      # - S3_ACCESS_KEY_ID=${MINIO_ACCESS_KEY}
      # - S3_SECRET_ACCESS_KEY=${MINIO_SECRET_KEY}
      # - S3_ENDPOINT=http://minio:9000
      # - S3_FORCE_PATH_STYLE=1
      # - S3_SIGNATURE_VERSION=v4
      # - S3_BUCKET=nodered-prod # Optional
      # - S3_REGION=
      # - S3_APP_NAME=steedos # Directory on S3
    volumes:
      - steedos-nodered-data:/data
    ports:
      - "1880:1880"

volumes:
  steedos-packages:
    driver: local
  steedos-minio-data:
    driver: local
  steedos-mongo-primary-data:
    driver: local
  steedos-nodered-data:
    driver: local
  steedos-appsmith-data:
    driver: local